|---工作区---|               |---版本库-----------------------|
|			 |				 |  stage			master <--HEAD|
|readme.txt  |__git__add__-->| readme.txt					  |
|LICENSE 	 |				 | LICENSE 						  |
|____________|				 |________________________________|

#提交到暂存区
git add readme.txt

#将暂存区的内容提交到版本库
git commit -m "add some words"

#查看暂存区的状态(是否有修改)
git status

#显示从最近到最远的提交日志【查看提交历史，以便确定要回退到哪个版本】
git log
#简略日志
git log --pretty=oneline

#回退到上一个版本
#指向的版本是当前版本：HEAD
#上一个版本：HEAD^ 
#上上个：HEAD^^
#上100个：HEAD~100
#也可以用版本id标识(commit_id)：3628164
git reset --hard HEAD^
git reset --hard 3628164

#用于记录每一次命令【看命令历史，以便确定要回到未来的哪个版本】
git reflog

#查看工作区和版本库里面最新版本的区别：
git diff HEAD -- readme.txt

#丢弃工作区的修改：
git checkout -- readme.txt 

#可以把暂存区的修改撤销掉(unstage),重新放回工作区
git reset HEAD readme.txt


'''
【小结时间】
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。
'''
cat readme.txt
